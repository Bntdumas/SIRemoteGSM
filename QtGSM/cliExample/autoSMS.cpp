#include "autoSMS.h"
#include <QSerialPort>
#include <QSerialPortInfo>
#include <QDebug>
#include <QDateTime>
#include <QTimer>

#include "GSModule.h"

#ifdef RASPBERRYPI
#include "wiringPi.h"
#endif

autoSMS::autoSMS(QObject *parent) :
    QObject(parent),
    m_sentSMS(0)
{

#ifdef RASPBERRYPI
    const int ret = wiringPiSetup();
    if (ret == -1) {
        qFatal("failed to setup wiringPi lib.");
    }
    pinMode(0, OUTPUT);
    pinMode(1, OUTPUT);

    digitalWrite(0, false) ;
    digitalWrite(1, false) ;
#endif

    m_gsm = new GSModule(0, true);

    m_timer = new QTimer();
    connect(m_gsm, SIGNAL(readyToTransmit()), m_timer, SLOT(start()));

    m_timer->setInterval(1000);
//    m_timer->setSingleShot(true);
    connect(m_timer, SIGNAL(timeout()), this, SLOT(sendAutoGeneratedSMS()));


    qDebug() << "===== GSM Module =====";

    // Creates the serial port here because it changes a lots depending on the system it's run from.
    QSerialPort *serialPort = new QSerialPort();

    serialPort->setPort(QSerialPortInfo("ttyUSB0"));
    serialPort->setBaudRate(QSerialPort::Baud19200);
    serialPort->setDataBits(QSerialPort::Data8);
    serialPort->setParity(QSerialPort::OddParity);
    serialPort->setStopBits(QSerialPort::OneStop);
    m_gsm->initializeSerialConnection(serialPort);
}

void autoSMS::sendAutoGeneratedSMS()
{
    if (m_sentSMS >= 10) {
        m_timer->stop();
    }

    QString smsMessage = QTime::currentTime().toString("hh:mm:ss.zzz");
    m_gsm->sendSMS(smsMessage, "+46708783740");
    m_sentSMS++;
}
